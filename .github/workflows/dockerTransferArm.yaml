name: Transfer Multi-Arch Docker Image to Docker Hub

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Source repository address (e.g., ghcr.io/user/image:tag)'
        required: true
      tag:
        description: 'Target tag (defaults to source tag if not specified)'
        required: false

jobs:
  transfer_image:
    runs-on: ubuntu-latest

    steps:
    - name: Set up QEMU (for ARM support)
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Parse Docker Image Name and Tag
      id: parse_image_name
      run: |
        # 提取镜像名称（去掉 tag）
        image_name=$(echo "${{ github.event.inputs.repository }}" | sed 's/[\/.]/-/g; s/:.*$//')
        echo "parsed_image_name=$image_name" >> $GITHUB_OUTPUT
        
        # 提取源 tag（如果有的话）
        source_tag=$(echo "${{ github.event.inputs.repository }}" | sed 's/.*://' || echo "latest")
        if [ -z "${{ github.event.inputs.tag }}" ]; then
          echo "target_tag=$source_tag" >> $GITHUB_OUTPUT
        else
          echo "target_tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        fi
      shell: bash

    - name: Login to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
      env:
        DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
        DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Pull Images for x86 and ARM
      run: |
        docker pull --platform linux/amd64 ${{ github.event.inputs.repository }}
        docker tag ${{ github.event.inputs.repository }} ${{ secrets.DOCKER_HUB_USER }}/${{ steps.parse_image_name.outputs.parsed_image_name }}:amd64
        
        docker pull --platform linux/arm64 ${{ github.event.inputs.repository }}
        docker tag ${{ github.event.inputs.repository }} ${{ secrets.DOCKER_HUB_USER }}/${{ steps.parse_image_name.outputs.parsed_image_name }}:arm64

    - name: Push Architecture-Specific Images
      run: |
        docker push ${{ secrets.DOCKER_HUB_USER }}/${{ steps.parse_image_name.outputs.parsed_image_name }}:amd64
        docker push ${{ secrets.DOCKER_HUB_USER }}/${{ steps.parse_image_name.outputs.parsed_image_name }}:arm64

    - name: Create and Push Multi-Arch Manifest
      run: |
        docker buildx create --use
        docker buildx imagetools create \
          --tag ${{ secrets.DOCKER_HUB_USER }}/${{ steps.parse_image_name.outputs.parsed_image_name }}:${{ steps.parse_image_name.outputs.target_tag }} \
          ${{ secrets.DOCKER_HUB_USER }}/${{ steps.parse_image_name.outputs.parsed_image_name }}:amd64 \
          ${{ secrets.DOCKER_HUB_USER }}/${{ steps.parse_image_name.outputs.parsed_image_name }}:arm64
